# Executar o Meteor com a base de dados a correr:
MONGO_URL="mongodb://127.0.0.1:27017/db1" meteor

_________
# configurar o NGINX
mate /usr/local/etc/nginx/nginx.conf &

nginx
nginx -s stop

_________
# desenvolve a app. depois de o fazeres, para fazeres o deploy no servidor, é:
# 1. compilar a app
meteor build ../Build


# 2. Extrair o ficheiro compilado para o diretório a fazer o host da app
tar -zxf myapp.tar.gz


# 3. preparar a node.js app para execução local
cd /…/myapp/bundle/programs/server
npm install
cd /…/myapp/bundle

# 4. Cria o ficheiro process.json, e coloca este conteúdo
mate process.json &



{
  "apps": [
    {
      "name": "putas e vinho verde",
      "script": "./main.js",
      "log_date_format": "YYYY-MM-DD",
      "exec_mode": "fork_mode",
      "env": {
        "PORT": 3000,
        "MONGO_URL": "mongodb://127.0.0.1/db1",
        "ROOT_URL": "http://localhost:3000/",
        "BIND_IP": "127.0.0.1"
      }
    }
  ]
}


# 5. Cria um script de execução, e mete este conteúdo:
mate run.sh &


#!/bin/sh
# starts pm2 and watches the process
pm2 start process.json -i max --watch


# 6. Torna-o executável, e executa-o
chmod +x run.sh
./run.sh

# 7. Passos Opcionais:
# para arrancares sempre este processo:
pm2 startup
# depois executa o comando que isso te deu. Depois grava o processo atual
pm2 save



#DONE. Para ver o estado do processo:
pm2 list

# https://www.techtronic.us/hosting-meteor-app-ubuntu-using-node-mongo-pm2/ 




__________
# converter o projeto para normal NodeJS app (fazer isto na pasta do projeto), e depois correr o site (não te esquecas de ter a DB a funcionar)
demeteorizer -o ../demeteorized/

cd .demeteorized/bundle/programs/server
npm install
MONGO_URL=mongodb://localhost:27017/test PORT=3000 ROOT_URL=http://localhost:3000 npm start
